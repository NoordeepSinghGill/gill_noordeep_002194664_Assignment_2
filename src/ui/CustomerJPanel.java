/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.CustomerChoices;
import model.Driver;
import model.DriverDetails;

/**
 *
 * @author 91942
 */
public class CustomerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerJPanel
     */
    JPanel workArea;
    DriverDetails newDriver;
    CustomerChoices customerlist;
    
    public CustomerJPanel(JPanel workArea, DriverDetails newDriver, CustomerChoices customerlist) {
        initComponents();
        this.newDriver = newDriver;
        this.workArea = workArea;
        this.customerlist = customerlist;
        
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDriver = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDriverAvailable = new javax.swing.JTable();
        dropdownStates = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        dropdownManufacturer = new javax.swing.JComboBox<>();
        dropdownYear = new javax.swing.JComboBox<>();
        btnHurry = new javax.swing.JButton();
        updateDatetime = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtminseats = new javax.swing.JTextField();
        txtmaxseats = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtserialnumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtmodelnumber = new javax.swing.JTextField();
        btnSameCityDriver = new javax.swing.JButton();
        btnSameCarManufacturer = new javax.swing.JButton();
        btnQuickCheck = new javax.swing.JButton();
        btnSameYear = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblAvailCount = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));
        setMinimumSize(new java.awt.Dimension(600, 600));

        tblDriver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Availability", "City", "Color", "Model", "Manufacturer", "Date of Manufacture", "Seats", "Seriall Number", "Telephone ", "Available On"
            }
        ));
        jScrollPane1.setViewportView(tblDriver);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Choose your ride");

        tblDriverAvailable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Availability", "City", "Color", "Model", "Manufacturer", "Date of Manufacture", "Seats", "Seriall Number", "Telephone ", "Available On"
            }
        ));
        jScrollPane2.setViewportView(tblDriverAvailable);

        dropdownStates.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "New York", "Florida" }));
        dropdownStates.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dropdownStatesFocusLost(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        dropdownManufacturer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Toyota", "GM", "Honda", "Audi" }));

        dropdownYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));

        btnHurry.setText("Ride Now");
        btnHurry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHurryActionPerformed(evt);
            }
        });

        jLabel2.setText("Catalog last updated on : ");

        jLabel3.setText("Min Seats");

        jLabel4.setText("Max Seats");

        jLabel5.setText("Serial Number");

        jLabel6.setText("Model Number");

        btnSameCityDriver.setText("jButton1");
        btnSameCityDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSameCityDriverActionPerformed(evt);
            }
        });

        btnSameCarManufacturer.setText("jButton1");
        btnSameCarManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSameCarManufacturerActionPerformed(evt);
            }
        });

        btnQuickCheck.setText("Quick available");
        btnQuickCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuickCheckActionPerformed(evt);
            }
        });

        btnSameYear.setText("jButton1");
        btnSameYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSameYearActionPerformed(evt);
            }
        });

        jLabel7.setText("Available cars :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(72, 72, 72)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel3))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtminseats)
                                                    .addComponent(txtmaxseats)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtmodelnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel5)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtserialnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(67, 67, 67)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dropdownManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dropdownStates, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dropdownYear, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnSameCityDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSameCarManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                            .addComponent(btnSameYear, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(282, 282, 282)
                                        .addComponent(btnQuickCheck)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSearch)
                                        .addGap(93, 93, 93)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblAvailCount)))
                                .addGap(0, 172, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateDatetime, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(btnHurry)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(updateDatetime, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtminseats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(dropdownStates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSameCityDriver))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtmaxseats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtserialnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmodelnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dropdownManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSameCarManufacturer))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dropdownYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSameYear))))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnQuickCheck)
                    .addComponent(jLabel7)
                    .addComponent(lblAvailCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHurry)
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
         
        deletePreviousData();
        
        String SelectedVal = dropdownStates.getSelectedItem().toString();
        String SelectedManufacturer = dropdownManufacturer.getSelectedItem().toString(); 
        String SelectedYearOfManufacture = dropdownYear.getSelectedItem().toString(); 
        int minimumseats = Integer.parseInt(txtminseats.getText());
        int maxseats = Integer.parseInt(txtmaxseats.getText());
        int serialNumberval = Integer.parseInt(txtserialnumber.getText());
        
        for(Driver vs : newDriver.getNewDriver()){
            if(vs.getCity().toString().equals(SelectedVal) && vs.getManufacturer().toString().equals(SelectedManufacturer) && vs.getDateofmanufacture().equals(SelectedYearOfManufacture) && vs.getSeats() >= minimumseats && vs.getSeats() <= maxseats && vs.getSerialnumber() == serialNumberval && vs.getCarmodel().equals(txtmodelnumber.getText())){
                JOptionPane.showMessageDialog(this, "Found");
                System.out.println(vs.getAvailabletowork());
                Driver cs = customerlist.addNewCustomerChoices();
                cs.setName(vs.getName());
                cs.setColor(vs.getColor());
                cs.setCity(vs.getCity());
                cs.setCarmodel(vs.getCarmodel());
                cs.setManufacturer(vs.getManufacturer());
                cs.setDateofmanufacture(vs.getDateofmanufacture());
                cs.setSeats(vs.getSeats());
                cs.setSerialnumber(vs.getSerialnumber());
                cs.setTelephonenumber(vs.getTelephonenumber());
                cs.setAvailabledate(vs.getAvailabledate());
                cs.setAvailabletowork(vs.getAvailabletowork());
                populateCustomerList();
            }
           System.out.println(SelectedVal); 
           System.out.println(vs.getCity());
           
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void dropdownStatesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dropdownStatesFocusLost
      /*  deletePreviousData();
        String SelectedVal = dropdownStates.getSelectedItem().toString();
         for(Driver vs : newDriver.getNewDriver()){
            if(vs.getCity().toString().equals(SelectedVal)){
                JOptionPane.showMessageDialog(this, "Found");
                
                Driver cs = customerlist.addNewCustomerChoices();
                cs.setName(vs.getName());
                cs.setColor(vs.getColor());
                cs.setCity(vs.getCity());
                cs.setCarmodel(vs.getCarmodel());
                cs.setManufacturer(vs.getManufacturer());
                cs.setDateofmanufacture(vs.getDateofmanufacture());
                cs.setSeats(vs.getSeats());
                cs.setSerialnumber(vs.getSerialnumber());
                cs.setTelephonenumber(vs.getTelephonenumber());
                cs.setAvailabledate(vs.getAvailabledate());
                populateCustomerList();
            }
           System.out.println(SelectedVal); 
           System.out.println(vs.getCity());
           
        }*/
    }//GEN-LAST:event_dropdownStatesFocusLost

    private void btnHurryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHurryActionPerformed
       /* Collections.sort(customerlist, new Comparator<Driver>(){
         @Override
         public int compare(Driver o1, Driver o2){
                return o1.getLatestavailable().compareTo(o2.getLatestavailable());
            }
        });*/
    }//GEN-LAST:event_btnHurryActionPerformed

    private void btnSameCityDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSameCityDriverActionPerformed
        deletePreviousData();
        String SelectedVal = dropdownStates.getSelectedItem().toString();
         for(Driver vs : newDriver.getNewDriver()){
            if(vs.getCity().toString().equals(SelectedVal)){
                Driver cs = customerlist.addNewCustomerChoices();
                cs.setName(vs.getName());
                cs.setColor(vs.getColor());
                cs.setCity(vs.getCity());
                cs.setCarmodel(vs.getCarmodel());
                cs.setManufacturer(vs.getManufacturer());
                cs.setDateofmanufacture(vs.getDateofmanufacture());
                cs.setSeats(vs.getSeats());
                cs.setSerialnumber(vs.getSerialnumber());
                cs.setTelephonenumber(vs.getTelephonenumber());
                cs.setAvailabledate(vs.getAvailabledate());
                cs.setAvailabletowork(vs.getAvailabletowork());
               
                }
            }
         populateCustomerList();
    }//GEN-LAST:event_btnSameCityDriverActionPerformed

    private void btnSameCarManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSameCarManufacturerActionPerformed
        deletePreviousData();
        String SelectedManufacturer = dropdownManufacturer.getSelectedItem().toString(); 
        for(Driver vs : newDriver.getNewDriver()){
            if(vs.getManufacturer().toString().equals(SelectedManufacturer)){
                Driver cs = customerlist.addNewCustomerChoices();
                cs.setName(vs.getName());
                cs.setColor(vs.getColor());
                cs.setCity(vs.getCity());
                cs.setCarmodel(vs.getCarmodel());
                cs.setManufacturer(vs.getManufacturer());
                cs.setDateofmanufacture(vs.getDateofmanufacture());
                cs.setSeats(vs.getSeats());
                cs.setSerialnumber(vs.getSerialnumber());
                cs.setTelephonenumber(vs.getTelephonenumber());
                cs.setAvailabledate(vs.getAvailabledate());
                cs.setAvailabletowork(vs.getAvailabletowork());
        
                }
            }
         populateCustomerList();
    }//GEN-LAST:event_btnSameCarManufacturerActionPerformed

    private void btnQuickCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuickCheckActionPerformed
        deletePreviousData();
        int count = 0;
        for(Driver vs : newDriver.getNewDriver()){
            if(vs.getAvailabletowork().equals("available")){
                Driver cs = customerlist.addNewCustomerChoices();
                cs.setName(vs.getName());
                cs.setColor(vs.getColor());
                cs.setCity(vs.getCity());
                cs.setCarmodel(vs.getCarmodel());
                cs.setManufacturer(vs.getManufacturer());
                cs.setDateofmanufacture(vs.getDateofmanufacture());
                cs.setSeats(vs.getSeats());
                cs.setSerialnumber(vs.getSerialnumber());
                cs.setTelephonenumber(vs.getTelephonenumber());
                cs.setAvailabledate(vs.getAvailabledate());
                cs.setAvailabletowork(vs.getAvailabletowork());
                count = count + 1;
                }
            }
         lblAvailCount.setText(Integer.toString(count));
         populateCustomerList();
    }//GEN-LAST:event_btnQuickCheckActionPerformed

    private void btnSameYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSameYearActionPerformed
        deletePreviousData();
        String SelectedYearOfManufacture = dropdownYear.getSelectedItem().toString(); 
        for(Driver vs : newDriver.getNewDriver()){
            if(vs.getDateofmanufacture().equals(SelectedYearOfManufacture)){
                Driver cs = customerlist.addNewCustomerChoices();
                cs.setName(vs.getName());
                cs.setColor(vs.getColor());
                cs.setCity(vs.getCity());
                cs.setCarmodel(vs.getCarmodel());
                cs.setManufacturer(vs.getManufacturer());
                cs.setDateofmanufacture(vs.getDateofmanufacture());
                cs.setSeats(vs.getSeats());
                cs.setSerialnumber(vs.getSerialnumber());
                cs.setTelephonenumber(vs.getTelephonenumber());
                cs.setAvailabledate(vs.getAvailabledate());
                cs.setAvailabletowork(vs.getAvailabletowork());
               
                }
            }
         populateCustomerList();
    }//GEN-LAST:event_btnSameYearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHurry;
    private javax.swing.JButton btnQuickCheck;
    private javax.swing.JButton btnSameCarManufacturer;
    private javax.swing.JButton btnSameCityDriver;
    private javax.swing.JButton btnSameYear;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> dropdownManufacturer;
    private javax.swing.JComboBox<String> dropdownStates;
    private javax.swing.JComboBox<String> dropdownYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAvailCount;
    private javax.swing.JTable tblDriver;
    private javax.swing.JTable tblDriverAvailable;
    private javax.swing.JTextField txtmaxseats;
    private javax.swing.JTextField txtminseats;
    private javax.swing.JTextField txtmodelnumber;
    private javax.swing.JTextField txtserialnumber;
    private javax.swing.JLabel updateDatetime;
    // End of variables declaration//GEN-END:variables

    private void populate() {
        
        DefaultTableModel model = (DefaultTableModel) tblDriver.getModel();
        model.setRowCount(0);
        
        for(Driver vs : newDriver.getNewDriver()){
            Object[] row = new Object[11];
            row[0] = vs;
            row[1] = vs.getAvailabletowork();
            row[2] = vs.getCity();
            row[3] = vs.getColor();
            row[4] = vs.getCarmodel();
            row[5] = vs.getManufacturer();
            row[6] = vs.getDateofmanufacture();
            row[7] = vs.getSeats();
            row[8] = vs.getSerialnumber();
            row[9] = vs.getTelephonenumber();
            row[10] = vs.getAvailabledate();
            
            model.addRow(row);
        }
        
        updateDatetime.setText(newDriver.getUpdatedcatalogtime());
    }

    private void populateCustomerList() {
        DefaultTableModel model = (DefaultTableModel) tblDriverAvailable.getModel();
        model.setRowCount(0);
        
        for(Driver cs : customerlist.getCustomerlist()){
            Object[] row = new Object[11];
            row[0] = cs;
            row[1] = cs.getAvailabletowork();
            row[2] = cs.getCity();
            row[3] = cs.getColor();
            row[4] = cs.getCarmodel();
            row[5] = cs.getManufacturer();
            row[6] = cs.getDateofmanufacture();
            row[7] = cs.getSeats();
            row[8] = cs.getSerialnumber();
            row[9] = cs.getTelephonenumber();
            row[10] = cs.getAvailabledate();
            model.addRow(row);
        }
    }

    private void deletePreviousData() {
        DefaultTableModel model = (DefaultTableModel) tblDriverAvailable.getModel();
        while(model.getRowCount() > 0){
            for(int i=0; i<model.getRowCount();i++){
                Driver SelectedDriver = (Driver) model.getValueAt(i, 0);
                customerlist.deleteCustomerChoices(SelectedDriver);
                model.removeRow(i);
            }
        
        } 
    }
    
}
